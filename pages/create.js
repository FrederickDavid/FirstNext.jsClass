import HeaderComponent from "./components/HeaderComponent";
import Head from "next/head";
import styled from "styled-components";
import { useState } from "react";
import * as yup from "yup";
import { useForm } from "react-hook-form";
import { yupResolver } from "@hookform/resolvers/yup";
import axios from "axios";

const Create = () => {
  const [image, setImage] = useState("");
  const [imagePix, setImagePix] = useState("/img2.png");

  const Model = yup.object().shape({
    name: yup.string().required(),
    message: yup.string().required(),
  });

  const { resgister, reset, handleSubmit } = useForm({
    resolver: yupResolver(Model),
  });

  const changeImage = async (e) => {
    const file = e.target.files[0];
    const save = URL.createObjectURL(file);
    setImage(save);
    const onSubmit = handleSubmit(async (data) => {
      console.log(data);
      const { name, message } = data;
      const formData = new formData();

      formData.append("image", image);
      formData.append("userName", userName);
      formData.append("course", course);

      const config = {
        header: {
          "content-type": "multipart-formdata",
        },
      };

      axios.post("http://localhost:3001/api/photo", formData, config);
    });

    const fileRef = ref(storage, "nextImage/" + file.name);
    const storageRef = uploadBytesResumable(fileRef, file);

    storageRef.on(
      "state_changed",
      (snapshot) => {
        const count = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;
        console.log(count);
      },
      (error) => {
        console.log(error.message);
      },
      getDownloadURL(storageRef.snapshot.ref).then((url) => {
        console.log(url);
        setAvatar(url);
      })
    );
  };
  return (
    <div>
      <Head>
        <title>Create Page</title>
        <meta name="description" content="Generated by Create Page" />
      </Head>
      <Container>
        <Wrapper>
          <Card>
            <Image src={imagePix} />
            <ImageInput id="pics" type="file" onChange={changeImage} />
            <ImgLabel htmlFor="pics">Upload Image</ImgLabel>
            <InputWrap>
              <Input />
              <Input />
              <Button>Submit</Button>
            </InputWrap>
          </Card>
        </Wrapper>
      </Container>
    </div>
  );
};

export default Create;

const Container = styled.div`
  width: 100%;
  height: calc(100% - 70px);
`;
const Wrapper = styled.div`
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
`;
const Card = styled.div`
  width: 250px;
  height: 300px;
  border: 1px crimson solid;
  box-shadow: 0px 0px 5px 1px rgba(0, 0, 0, 0.4);
  border-radius: 5px;
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-top: 100px;
`;
const Image = styled.img`
  width: 100px;
  height: 100px;
  border-radius: 50%;
  background-color: lightgrey;
  object-fit: cover;
  margin: 10px 0px;
`;

const ImageInput = styled.input`
  display: none;
`;
const ImgLabel = styled.label`
  padding: 5px 10px;
  background-color: crimson;
  border-radius: 5px;
  margin: 10px 0px;
  color: white;
  font-weight: 600;
`;
const InputWrap = styled.div`
  display: flex;
  flex-direction: column;
  align-items: center;
`;
const Input = styled.input`
  padding: 5px;
  width: 220px;
  height: 32px;
  margin-bottom: 5px;
`;
const Button = styled.button`
  padding: 5px;
  width: 220px;
  height: 32px;
  background-color: crimson;
  border: none;
  font-size: 20px;
  font-weight: 600;
  color: white;
`;
